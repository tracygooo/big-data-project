#!/usr/bin/env python

'''
Using combined.csv as input, conduct data preparation for DMak software
(1) Put ID in last column
(2) Remove Date column
(3) Replace FBI code by numbers
(4) Replace Domestic and Arrest values by numbers (TRUE - 1, FALSE - 2)
'''

import pandas as pd
import numpy as np

# Read combined data generated by clean_data.py to data frame 'cdf'
cdf = pd.read_csv( "../data/cleaned/combined.csv" )

# Remove attribute 'Date' and ID column ('Unnamed: 0') in csv file
cdf = cdf.drop( [ 'Date' , 'Unnamed: 0' ] , axis = 1 )

# Replace values of Domestic and Arrest by numbers, True = 1, False = 2
cdf.Domestic = cdf.Domestic.astype(int)
cdf.Arrest = cdf.Arrest.astype(int)
cdf[ 'Domestic' ].replace( 0 , 2 , inplace = True )
cdf[ 'Arrest' ].replace( 0 , 2 , inplace = True )


#----------------------------------------------------------
# Number FBI code in the order of their occurences in the dataframe,
# Output FBI code and their responding order number in file 'FBI_code_ID.txt'
#----------------------------------------------------------

# List used to record all FBI code appeard in dataframe
FBI = []

i = 0
of = open( '../data/cleaned/FBI_code_ID.txt' , 'w' )
for cdf_ind , row in cdf.iterrows():
    # Record row number, output it to terminal every 1000 rows
    i += 1
    if( i%1000 == 0 ) and ( i >= 999 ):
        print( 'Iter = {} '.format( i ) )

    # FBI code - fc
    fc = row[ 'FBI Code' ]

    # fc in FBI: Change entry to the index of fc in list FBI
    if fc in FBI:
        list_ind = FBI.index( fc )
        cdf.loc[ cdf_ind , 'FBI Code' ] = list_ind + 1

    # fc not in FBI: Change entry to the length of list FBI
    else:
        FBI.append( fc )
        l = len( FBI )
        my_str = fc + '\t' + str( l ) + '\n'
        of.write( my_str )
        cdf.loc[ cdf_ind , 'FBI Code' ] = l

    #print( 'After replace: {}\n'.format( cdf.loc[ i-1 , 'FBI Code' ] ) )

of.close()
#===========================================================

# Add a new ID column to match format of dMak software
row = cdf.shape[ 0 ]
cdf[ 'ID' ] = np.arange( 1 , row + 1 , 1 , dtype = int )

# Output changed data frame in dmak.csv
cdf.to_csv( '../data/cleaned/dmak.csv', sep = '\t' , header = False , index = False )

print('Output data for DMak format done!')
